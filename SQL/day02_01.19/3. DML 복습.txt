DML 데이터조작어
- INSERT : 데이터 추가
- DELETE : 데이터 삭제
- UPDATE : 데이터 수정
- SELECT : 데이터 검색 = Query 질의어
	SQL의 SELECT 문은 데이터를 검색하는 기본 문자로
	 특별히 질의어(query)라고 부른다.

SELECT 문의 기본 문법
- 기본구조

SELECT [ALL | DISTINCT] 속성이름(들)
FROM 테이블이름(들)
[WHERE 검색조건(들)]
[GROUP BY 속성이름]
[HAVING  검색조건(들)]
[ORDER BY 속성이름 [ASC | DESC]]
[] : 선택적 사용
| : 옵션

ALL : 전체 레코드(기본값, 입력안하면 적용됨)
DISTINCT : 중복 없는 레코드(중복 제거)
* : 컬럼명에 *를 넣는 경우, 모든 컬럼 검색을 의미.
FROM 테이블명 : 검색할 테이블
WHERE 조건식 : 검색 조건(해당 조건에 맞는 데이터만 검색)
GROUP BY 컬러명 : 중복되는 키 컬럼끼리 묶어 검색.
ORDER BY 컬럼명 ASC | DESC : 정렬(오름차순 | 내림차순)

EX)
SELECT * FROM BOOK; -> BOOK 테이블 내 모든 컬럼 검색
SELECT DISTINCT publisher FROM BOOK; -> publisher 컬럼 중복 없이 검색

- 자세한 구조

SELECT 
[ALL | DISTINCT]
[테이블이름.]{ * | 속성이름 [[AS] 속성이름 별칭]}
[FROM { 테이블이름 [AS 테이블이름별칭] }
[INNER JOIN | LEFT [OUTER] JOIN | RIGHT [OUTER] JOIN {테이블이름 
[ON 검색조건]} | FULL [OUTER] JOIN {테이블이름}]] 
[WHERE 검색조건(들)]
[GROUP BY {속성이름, [..., n]}]
[HAVING 검색조건(들)]
[질의 UNION 질의 | 질의 UNION ALL 질의]
[ORDER BY {속성이름 [ASC | DESC], [..., n]}]

[] : 대괄호 안의 SQL의 예약어들은 선택적으로 사용한다.
{} : 중괄호 안의 SQL 예약어들은 필수적으로 사용한다.
| : 선택 가능한 문법들 중 한 개를 사용할 수 있다.


WHERE 조건
- 조건에 맞는 검색 시 사용.
1. 비교 0
	= : 같다, <> : 다르다(!=)
2. 범위 0
	BETWEEN a AND b : a 이상 b 이하 범위
3. 집합 0 
	WHERE 컬럼명 IN(a,b) : 교집합(a 또는 b)
	WHERE 컬럼명 NOT IN(a,b) : 차집합(a와 b 말고)
	WHERE 컬러명 UNION(a,b) : 합집합(a와 b 모두)
4. 패턴
	- 문자열 검색, LIKE와 함께 사용하는 와일드 문자
	LIKE '검색어'; 검색어와 일치하는 패턴의 문자열
	LIKE '%검색어'; 검색어가 마지막에 포함되는 패턴의 문자열
	LIKE '검색어%'; 검색어가 처음에 포함되는 패턴의 문자열
	LIKE '%검색어%'; 검색어가 중간에 포함되는 패턴의 문자열
	LIKE '_검색어%'; 중간에 _(와일드카드)는 한문자를 대체한다.
		EX) 축구,야구,농구 = _구
5. NULL
	데이터가 없는 값(값을 추가하지 않은 것.)
	- 0과 ''(빈값)과는 다르다.
	- IS NULL, IS NOT NULL
6. 복합 조건
	- AND, OR, NOT 복합조건을 명시.
	- OR 보다는 IN(집합) 연산자를 사용한다.

집계함수와 GROUP BY
1. 집계 함수(통계) : 숫자 데이터
	COUNT(컬럼명...*) : 레코드 갯수
	SUM(컬럼명) : 총합
	AVG(컬럼명) : 평균
	MIN(컬럼명) : 최소값
	MAX(컬럼명) : 최대값
	AS(Alias) : 컬러며으 테이블명의 별칭
		- AS 생략 가능
		- 별칭 문자에 공백이 있는 경우 오류 발생하므로, ' ' 안에 담아준다.
2. GROUP BY
 - 속성값이 같은 레코드끼리 그룹을 만들 수 있다.
 - HAVING : GROUP BY 절의 결과 나타나는 그룹을 제한.
	HAVING : 항상 GROUP BY와 함께 사용해야 함. 맨 뒤에 와야함.
 - 주의사항
	- GROUP BY 속성명 : SELECT 절에는 GROUP BY로 묶인 속성 또는 집계함수(스칼라값) 만 올수 있다.
	- HAVING 검색조건 : 반드시 GROUP BY와 함께 작성 및 WHERE 절보다 뒤에 나와야 한다.
	 또한 검색조건으로 집계함수가 와야한다.

두개 이상의 테이블에서 SQL 질의
- SQL은 여러 개의 테이블을 질의하는 두가지 방법을 제공한다.
- JOIN(조인) 과 부속질의(SUBQUERY)

1. 조인
	1. 일반 조인
	- 한 테이블의 행을 다른 테이블의 행에 연결하여 두개 이상의 테이블을 결합
	 하는 연산.
	- 동등조인 : 동등조건에 의하여 테이블을 조인한 것.
	- 동등 조인 시, 외래키를 통해서 연결한다.
	- WHERE 테이블명1.동등속성 = 테이블명2.동등속성
	- 동등조인은 3개 이상 연결할 수 있다.(조인 조건에 AND로 합친다)
	- 조금 더 간단한 조인형태(이걸 많이 사용한다.)
		- FORM 테이블명1 INNER JOIN 테이블명2;
		- FORM 절에 조인 종류를 적고 ON에 조인 조건을 명시한다.

	2. 외부 조인
	- FROM 절에 조인 종류를 적고 ON절에 조인조건을 명시한다.
	- 일반 조인으로 확인할 수 없는 데이터를 확인할 수 있다.

2. 부속질의
- 질의문(SELECT) 안에 질의문(SELECT)
	1) 스칼라 부속질의 (SELECT 부속질의)
		- 스칼라 : 단일값(하나의 값) 만 출력된다.
	2) 인라인 뷰 (FROM 부속질의)
		- 가상의 테이블, 여러개
	3) 중첩 질의(WHERE 부속질의)
		- 스칼라값 + 여러개 
