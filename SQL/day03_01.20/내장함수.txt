SQL 함수
- DBMS가 제공하는 내장함수
- 사용자 정의 함수

SQL 내장함수
- SQL 내장함수는 SELECT절, WHERE절, UPDATE절 등 모든 절에서 사용 가능.

- 종류
	- 숫자 함수
	ABS(숫자) : 절대값
	CEIL(숫자) : 올림
 	FLOOR(숫자) : 내림
	ROUND(숫자, m) : 반올림, m은 반올림의 기준 자릿수
		ex) ROUND(5.36,1) -> 5.40
	POWER(숫자,n) : n제곱 값을 계산.

	- 문자 함수
	REPLACE(속성명,기존문자, 새문자)
	CONCAT(s1,s2) : 두문자열 연결
	LOWER(s) : 소문자로 변환
	UPPER(s) : 대문자로 변환
	LPAD(문자열,자리수,지정문자) : 문자열의 오른쪽부터 자리수까지 지정한 문자로 채움
	RPAD(문자열,자리수,지정문자) : 문자열의 왼쪽부터 자리수까지 지정한 문자로 채움
	SUBSTR(s,n,k) : 문자열(s)을 지정석(n)부터 지정길이(k)까지 잘라서 반환
	TRIM(c FROM s) : 문자열(s) 양쪽에 지정문자(c)를 삭제
				- 문자열만 넣으면 기본값으로 공백제거

	- 숫자값 반환 함수
	ASCII(c) : 알파벳의 아스키 코드값 반환.
	LENGTH(s) : 문자열의 바이트수 반환.
	CHAR_LENGTH(s) : 문자열의 문자수 반환.
	
	- 날짜, 시간 함수
	STR_TO_DATE(string,format) : 문자열 데이터 -> 날짜형 데이터.  
		EX) STR_TO_DATE('2023-01-22','%Y-%m-%d') -> 2023-01-22  
	DATE_FORMAT(date,format)  : 날짜형 데이터 -> 문장열 데이터.  
		EX) DATE_FORMAT('2023-01-22','%Y-%m-%d')  
	ADDDATE(date,interval)  : date에서 interval 만큼 더함.  
		EX) ADDDATE('2023-01-22',INTERVAL 5 DAY) -> 2023-01-27  
	DATE(date) : DATE형의 날짜부분을 반환.  
		EX) DATE('2023-01-22 00:00:00') -> 2023-01-22  
	DATEDIFF(date1,date2) : date1 - date2 차이를 정수형으로 반환.  
		EX) DATEDIFF('2023-01-22','2023-01-12') -> 10  
	SYSDATE : DBMS 시스템상 오늘 날짜를 반환하는 함수.  
		일반적으로 NOW()를 더 많이 사용한다.

		- format 주요 지정자
			%w : 요일 순서(0~6, 0 : 일요일)  
			%W : 요일 이름(Sunday ~ Saturday)  
			%a : 요일의 약자(Sun ~ Sat)  
			%d : 1달 중 날짜(00~31)  
			%j : 1년 중 날짜(001~366)  
			%h : 12시간(01~12)  
			%H : 24시간(00~23)  
			%i : 분(0~59)  
			%m : 월 순서(01~12,January=01)  
			%b : 월 이름 약어  
			%M : 월 이름  
			%s : 초(0~59)  
			%Y : 4자리 연도  
			%y : 마지막 2자리 연도

	- NULL 값 처리
		- NULL : 아직 지정되지 않은 값
		- 0, 빈문자(''),공백(' ')과는 다른 값이다.
		- NULL 값은 미지정 값으로, 비교 연산자로 비교 불가능하다.
		- NULL 연산
			- NULL + 숫자 = NULL이다.
			- 집계 함수를 계산할 때 NULL이 포함된 행은 집계에서 빠진다.
			 - NULL값 확인 방법
				IS NULL : NULL 값을 찾을 때 쓰는 연산자.
				IS  NOT NULL : NULL이 아닌 값을 찾을 떄 쓰는 연산자.
			- IFNULL 함수
				NULL 값을 다른 값으로 대체하여 연산하거나 출력하는 함수.
				IFNULL(속성, 값) 
	- 행번호 출력
		※ MYSQL에서 변수 처리 방법 : 변수명 앞에 @기호를 분인다.
		   치환문에는 SET:=를 꼭 붙여준다.

뷰
- 뷰(view)는 하나 이상의 테이블을 합하여 만든 가상의 테이블이다.
- 뷰는 테이블처럼 사용이 가능하지만 SLEECT 문을 제외한 일부 작업 수헹에 제약이 있다.

뷰의 생성
- 실제 SQL 문에서 테이블처럼 사용 가능한 데이터베이스 개체이다.
	CREATE VIEW 뷰이름 [(열이름 [,...n])]
	AS SELECT 문
- 생성 시 열이름은 SELECT문의 속성들과 일대일로 대응되어야 한다.

뷰의 수정
CREATE OR REPLACE VIEW 뷰이름 [(열이름)]
AS SELECT 문

뷰의 삭제
DROP VIEW 뷰이름 [,... n];